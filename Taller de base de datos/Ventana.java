/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectobd;

import java.awt.BorderLayout;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;



/**
 *
 * @author AbelRM
 */
public class Ventana extends javax.swing.JFrame {
    private final String url = "jdbc:postgresql://localhost/dvd_rental";
    private final String user = "postgres";
    private final String password = "admin";
    static  TextField t1;
    static  TextField t2;
    static  TextField t3;
    static  TextField t4;
    static  TextField t5;
    static JPanel panel;
    static JButton boton;
    static JLabel l1;
    static   CallableStatement cs;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        operacion = new javax.swing.JComboBox<>();
        tabla = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tx = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        aceptar = new javax.swing.JButton();
        consulta1 = new javax.swing.JButton();
        consulta2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(160, 50));
        setPreferredSize(new java.awt.Dimension(680, 580));

        operacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Altas", "Bajas", "Cambios" }));
        operacion.setPreferredSize(new java.awt.Dimension(56, 40));

        tabla.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Categorias", "Actores", "Rentas" }));
        tabla.setPreferredSize(new java.awt.Dimension(56, 40));

        tx.setEditable(false);
        tx.setColumns(20);
        tx.setRows(5);
        jScrollPane1.setViewportView(tx);

        jLabel1.setText("Consulta de actores por apellido");

        jLabel2.setText("Consultas de existencias por tienda");

        aceptar.setText("Aceptar");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        consulta1.setText("Consultar");
        consulta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consulta1ActionPerformed(evt);
            }
        });

        consulta2.setLabel("Consultar");
        consulta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consulta2ActionPerformed(evt);
            }
        });

        jButton1.setText("Devoluciones");
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setMargin(new java.awt.Insets(8, 14, 2, 14));
        jButton1.setPreferredSize(new java.awt.Dimension(90, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(operacion, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tabla, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(consulta2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(consulta1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tabla, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(operacion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(consulta1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(consulta2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void consulta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consulta2ActionPerformed
        consulta2();
    }//GEN-LAST:event_consulta2ActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        if (operacion.getSelectedItem()=="Altas"&&tabla.getSelectedItem()=="Categorias") {
            JFrame v1 = new JFrame();
            v1.setSize(300, 200);
            panel = new JPanel();
            JPanel panel2 = new JPanel();
            v1.setLayout(new BorderLayout());
            v1.add(panel,BorderLayout.NORTH);
            v1.add(panel2,BorderLayout.SOUTH);
            v1.setVisible(true); 
            v1.setResizable(false);
            t1=new TextField(20);             
            boton = new JButton("Aceptar");         
            OyenteAltas oyenteAl = new OyenteAltas();
            boton.addActionListener(oyenteAl);
            panel.add(t1);
            panel.add(boton);
            l1=new JLabel();
            l1.setText("Escribe el nombre de la categoria");            
            panel2.add(l1);                        
            
        }else
            if (operacion.getSelectedItem()=="Altas"&&tabla.getSelectedItem()=="Actores") {
                JFrame v1 = new JFrame();
                v1.setSize(300, 200);
                v1.setVisible(true);
                v1.setResizable(false);
                panel = new JPanel();
                t1=new TextField(30);
                t1.setText("Nombre");
                t2=new TextField(30);
                t2.setText("Apellido");
                boton = new JButton("Aceptar");         
                OyenteAltas oyenteAl = new OyenteAltas();
                boton.addActionListener(oyenteAl); 
                panel.add(t1);
                panel.add(t2);
                panel.add(boton);                
                v1.add(panel);
                l1=new JLabel();
                l1.setText("Escribe el nombre y apellido del actor");
                panel.add(l1);
                
        }else 
                if (operacion.getSelectedItem()=="Altas"&&tabla.getSelectedItem()=="Rentas") {
                    JFrame v1 = new JFrame();
                    v1.setSize(280, 240);
                    v1.setVisible(true);
                    v1.setResizable(false);
                    panel = new JPanel();
                    t1=new TextField(25);
                    t1.setText("rental date");
                    t2=new TextField(25);
                    t2.setText("inventory id");
                    t3=new TextField(25);
                    t3.setText("customer id");                    
                    t5=new TextField(25);
                    t5.setText("staff id");
                                        
                    boton = new JButton("Aceptar");         
                    OyenteAltas oyenteAl = new OyenteAltas();
                    boton.addActionListener(oyenteAl);
                    panel.add(t1);
                    panel.add(t2);
                    panel.add(t3);                   
                    panel.add(t5);
                    panel.add(boton);
                    v1.add(panel);
            
        }else
                    if (operacion.getSelectedItem()=="Bajas"&&tabla.getSelectedItem()=="Categorias") {
                        JFrame v1 = new JFrame();
                        v1.setSize(300, 200);
                        v1.setResizable(false);
                        panel = new JPanel();
                        JPanel panel2 = new JPanel();
                        v1.setLayout(new BorderLayout());
                        v1.add(panel,BorderLayout.NORTH);
                        v1.add(panel2,BorderLayout.SOUTH);
                        v1.setVisible(true);                                                 
                        t1=new TextField(20);             
                        boton = new JButton("Aceptar");         
                        OyenteAltas oyenteAl = new OyenteAltas();
                        boton.addActionListener(oyenteAl);
                        panel.add(t1);
                        panel.add(boton);
                        l1=new JLabel();
                        l1.setText("Escribe el id de la categoria a borrar");            
                        panel2.add(l1);  
            
        }else
                        if (operacion.getSelectedItem()=="Bajas"&&tabla.getSelectedItem()=="Actores") {
                        JFrame v1 = new JFrame();
                        v1.setResizable(false);
                        v1.setSize(300, 200);
                        panel = new JPanel();
                        JPanel panel2 = new JPanel();
                        v1.setLayout(new BorderLayout());
                        v1.add(panel,BorderLayout.NORTH);
                        v1.add(panel2,BorderLayout.SOUTH);
                        v1.setVisible(true);                                                 
                        t1=new TextField(20);             
                        boton = new JButton("Aceptar");         
                        OyenteAltas oyenteAl = new OyenteAltas();
                        boton.addActionListener(oyenteAl);
                        panel.add(t1);
                        panel.add(boton);
                        l1=new JLabel();
                        l1.setText("Escribe el id del actor a borrar");            
                        panel2.add(l1);   
            
        }else
                            if (operacion.getSelectedItem()=="Cambios"&&tabla.getSelectedItem()=="Categorias") {
                                JFrame v1 = new JFrame();
                                v1.setSize(300, 200);
                                v1.setResizable(false);
                                panel = new JPanel();
                                JPanel panel2 = new JPanel();
                                v1.setLayout(new BorderLayout());
                                v1.add(panel,BorderLayout.NORTH);
                                v1.add(panel2,BorderLayout.SOUTH);
                                v1.setVisible(true);                                                 
                                t1=new TextField(20);             
                                boton = new JButton("Aceptar");                                         
                                boton.addActionListener (new ActionListener(){public void actionPerformed(ActionEvent e){
                                JFrame v1 = new JFrame();
                                v1.setResizable(false);
                                v1.setSize(300, 200);
                                panel = new JPanel();
                                JPanel panel2 = new JPanel();
                                v1.setLayout(new BorderLayout());
                                v1.add(panel,BorderLayout.NORTH);
                                v1.add(panel2,BorderLayout.SOUTH);
                                v1.setVisible(true);                                                 
                                t2=new TextField(20);             
                                JButton boton2 = new JButton("Aceptar");         
                                boton2.addActionListener (new ActionListener(){public void actionPerformed(ActionEvent e){
                                    updateC();
                                } });
                                panel.add(t2);
                                panel.add(boton2); 
                                JLabel l2= new JLabel("Escribe el nuevo nobre de la categoria");                                
                                panel2.add(l2); 
                                consultaC();
                                } });
                                panel.add(t1);
                                panel.add(boton);
                                l1=new JLabel();
                                l1.setText("Escribe el id de la categoria");            
                                panel2.add(l1); 
            
        }else
                                if (operacion.getSelectedItem()=="Cambios"&&tabla.getSelectedItem()=="Actores") {
                                    JFrame v= new JFrame();
                                    v.setVisible(true);
                                    v.setResizable(false);
                                    v.setSize(300, 200);
                                    JPanel p = new JPanel();
                                    t1= new TextField(20);                                    
                                    JLabel l = new JLabel("Escribe el id del actor");
                                    JButton b = new JButton("Aceptar");
                                    p.add(t1);
                                    p.add(b);
                                    p.add(l);
                                    v.add(p);
                                    b.addActionListener (new ActionListener(){public void actionPerformed(ActionEvent e){
                                        JFrame v= new JFrame();
                                        v.setVisible(true);
                                        v.setResizable(false);
                                        v.setSize(280, 220);
                                        JPanel p = new JPanel();
                                        t2 = new TextField(25);                                       
                                        t3 = new TextField(25);
                                        JButton b = new JButton("Aceptar");
                                        b.addActionListener (new ActionListener(){public void actionPerformed(ActionEvent e){
                                             updateA();
                                            } });
                                        p.add(t2);
                                        p.add(t3);
                                        p.add(b);                                        
                                        v.add(p);
                                        consultaA();
                                } });
                                    
            
        }
              
    }//GEN-LAST:event_aceptarActionPerformed

    private void consulta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consulta1ActionPerformed
            JFrame v1 = new JFrame();
            v1.setSize(300, 240);
            v1.setResizable(false);
            v1.setVisible(true);
            panel = new JPanel();
            t1=new TextField(25);
            panel.add(t1);
            JLabel l1=new JLabel("Escribe el apellido del actor que quires a buscar");
            boton = new JButton("Aceptar"); 
            boton.addActionListener (new ActionListener(){
                public void actionPerformed(ActionEvent e){
                consulta1();
                } }
                        );
            panel.add(boton);
            panel.add(l1);            
            v1.add(panel);
        
    }//GEN-LAST:event_consulta1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                JFrame v1 = new JFrame();
                v1.setSize(300, 200);
                v1.setVisible(true);
                v1.setResizable(false);
                panel = new JPanel();
                t1=new TextField(30);
                t1.setText("rental_id");
                t2=new TextField(30);
                t2.setText("return_date");
                boton = new JButton("Aceptar");         
                boton.addActionListener (new ActionListener(){public void actionPerformed(ActionEvent e){
                                             updateR();
                                            } }); 
                panel.add(t1);
                panel.add(t2);
                panel.add(boton);                
                v1.add(panel);                                
    }//GEN-LAST:event_jButton1ActionPerformed
    public Connection connect() {
        Connection conn = null;
        try {
            conn = DriverManager.getConnection(this.url, this.user, this.password);
            System.out.println("Conectado al servidor de PostgreSQL exitosamente.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
 
        return conn;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {                
    }
    public void consultaC(){
        String sql="select name from category where category_id="+Integer.parseInt(t1.getText())+";";        
        try(
                Connection conn = connect();
                Statement stmt = conn.createStatement();
                ResultSet rs =stmt.executeQuery(sql))    
        { 
            while (rs.next()) {
                t2.setText(rs.getString("name"));
                
            }
                      
                         
                } catch (SQLException ex) {  
                      
                }
    }
    public void consultaA(){
        String sql="select first_name,last_name from actor where actor_id="+Integer.parseInt(t1.getText())+";";        
        try(
                Connection conn = connect();
                Statement stmt = conn.createStatement();
                ResultSet rs =stmt.executeQuery(sql))    
        { 
            while (rs.next()) {
                t2.setText(rs.getString("first_name"));
                t3.setText(rs.getString("last_name"));
                
            }
                      
                         
                } catch (SQLException ex) {  
                      
                }
    }

    public void altasCategorias(){
        try (
                Connection conn = connect();  )             
        { 
            cs=conn.prepareCall("select insertcategory(?)");
            cs.setString(1,t1.getText());
            cs.execute();
            JOptionPane.showMessageDialog(null,"Registro insertado exitisamente");
            
                } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Algo salio mal");
                }
    }
    public void altasActores(){
        try (
                Connection conn = connect();  )             
        { 
            cs=conn.prepareCall("select insertactor(?,?)");
            cs.setString(1,t1.getText());
            cs.setString(2,t2.getText());
            cs.execute();
            JOptionPane.showMessageDialog(null,"Registro insertado exitisamente");
            
                } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Algo salio mal");
                }
    }
    
    public void altasRentas(){ 
        String SQL=" ";
        boolean err=false;
        try {
            SQL = "INSERT INTO rental(rental_date, inventory_id,customer_id,staff_id ) VALUES ("+t1.getText()+","+Integer.parseInt(t2.getText())+","+Integer.parseInt(t3.getText())+","+Integer.parseInt(t5.getText())+")";
        } catch (Exception e) {
            err=true;
            JOptionPane.showMessageDialog(null,"Algo salio mal");
        }
        
       
        try (
                Connection conn = connect();                    
                
                )
        {      
            cs=conn.prepareCall(SQL);
            cs.execute();
          JOptionPane.showMessageDialog(null,"Registro insertado exitisamente");
            
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Algo salio mal");
            
        }
    }
    public void consulta1(){
        tx.setText("");
        String SQL = "SELECT actor_id,first_name,last_name,last_update FROM ACTOR WHERE last_name="+"'"+t1.getText()+"'";        
        try (
                Connection conn = connect();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(SQL) 
                )
        {
                    
            while (rs.next()) {
                int actor_id=rs.getInt("actor_id");
                String first_name=rs.getString("first_name");
                String last_name=rs.getString("last_name");
                String last_update=rs.getString("last_update");                
                tx.append(actor_id+"\t"+first_name+"\t"+last_name+"\t"+last_update+"\n");
                
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Algo salio mal");
        }
    }
    public void consulta2(){
        tx.setText("");
        String SQL = "SELECT(Select city from  city inner join  address on address.city_id=city.city_id inner join store on store.address_id=address.address_id where store_id=inventory.store_id),(select title from film where (select inventory.film_id ) =film_id),count(film_id) as existencia from inventory group by film_id,store_id  order by film_id,store_id";
       
        try (
                Connection conn = connect();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(SQL))                
        {            
            while (rs.next()) {                
                String city=rs.getString("city");
                String title=rs.getString("title");
                String existencia=rs.getString("existencia");                
                tx.append(city+"\t"+title+"\t\t"+existencia+"\n");
                
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Algo salio mal");
        }
    } 
    public void borrarC(){
        try (
                Connection conn = connect();  )             
        { 
           
            cs=conn.prepareCall("select eliminartecc(?)");             
            cs.setInt(1,Integer.parseInt(t1.getText())); 
            
            cs.execute();
            
            JOptionPane.showMessageDialog(null,"Registro borrado exitisamente");
            
                } catch (SQLException ex) {
                      
                JOptionPane.showMessageDialog(null,"Algo salio mal");
                }
    }
    public void borrarA(){
        try (
                Connection conn = connect();  )             
        { 
           
            cs=conn.prepareCall("select eliminarte(?)");             
            cs.setInt(1,Integer.parseInt(t1.getText()));             
            cs.execute();
            
            JOptionPane.showMessageDialog(null,"Registro borrado exitisamente");
            
                } catch (SQLException ex) {
                      
                JOptionPane.showMessageDialog(null,"Algo salio mal");
                }
    }
    public void updateA(){
        try (
                Connection conn = connect();
                  )             
        { 
           
            
            cs=conn.prepareCall("select actualizaractor(?,?,?)");             
            cs.setInt(1,Integer.parseInt(t1.getText()));   
            cs.setString(2,t2.getText());
            cs.setString(3,t3.getText());
            cs.execute();

         
                JOptionPane.showMessageDialog(null,"Algo salio mal");
                                    
                } catch (SQLException ex) {
                      
                JOptionPane.showMessageDialog(null,"Algo salio mal");
                }
    }
    public void updateC(){
        try (
                Connection conn = connect();  )             
        { 
           
            cs=conn.prepareCall("select actualizarcategorias(?,?)");             
            cs.setInt(1,Integer.parseInt(t1.getText())); 
            cs.setString(2,t2.getText());
            cs.execute();
            
            JOptionPane.showMessageDialog(null,"Registro actualizado exitisamente");
            
                } catch (SQLException ex) {
                      
                JOptionPane.showMessageDialog(null,"Algo salio mal");
                }
    }
    public void updateR(){        
        String SQL = "UPDATE rental SET return_date= ' "+t2.getText() +" ' where rental_id = "+t1.getText();
       
        try (
                Connection conn = connect();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(SQL))                
        {            
            JOptionPane.showMessageDialog(null,"Devolucion completada");
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(null,"Devolucion completada");
        }
    }
    
    class OyenteAltas implements ActionListener{     
    public void actionPerformed(ActionEvent e) {
        if (operacion.getSelectedItem()=="Altas"&&tabla.getSelectedItem()=="Categorias") {
            altasCategorias();            
        }else
            if (operacion.getSelectedItem()=="Altas"&&tabla.getSelectedItem()=="Actores") {                
                altasActores();
            }else
                if (operacion.getSelectedItem()=="Altas"&&tabla.getSelectedItem()=="Rentas") {
                    altasRentas();
        }else
                    if (operacion.getSelectedItem()=="Bajas"&&tabla.getSelectedItem()=="Categorias") {
                        borrarC();
            
        }else 
                        if (operacion.getSelectedItem()=="Bajas"&&tabla.getSelectedItem()=="Actores") {                            
                            borrarA();
        }else 
                            if (operacion.getSelectedItem()=="Cambios"&&tabla.getSelectedItem()=="Categorias") {
                               updateA(); 
            
        }else
                                if (operacion.getSelectedItem()=="Cambios"&&tabla.getSelectedItem()=="Categorias") {
                                    updateC();
            
        }
        
        
    }
    
}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton aceptar;
    private javax.swing.JButton consulta1;
    private javax.swing.JButton consulta2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JComboBox<String> operacion;
    private static javax.swing.JComboBox<String> tabla;
    private static javax.swing.JTextArea tx;
    // End of variables declaration//GEN-END:variables
}


